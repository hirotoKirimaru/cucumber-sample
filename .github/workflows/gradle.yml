name: Java CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    # redisのコンテナを立てる？
    # https://docs.github.com/ja/actions/using-containerized-services/creating-redis-service-containers
    # Service containers to run with `container-job`
#    services:
#      redis:
#        image: redis
#        ports:
#          - 6379:6379
#        options: >-
#          --health-cmd "redis-cli ping"
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Cache gradle modules
      uses: actions/cache@v3
      env:
        cache-name: cache-gradle-modules
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
#    - name: docker images
#      working-directory: tools
#      run: docker-compose build redis
    - name: sudo
      run: sudo chmod +x ./gradlew
    - name: Build with Gradle
      env:
        GITHUB: true
      run: ./gradlew build
    - name: test
      env:
        GITHUB: true
      run: ./gradlew test
    - if: always()
      name: Upload test result
      uses: actions/upload-artifact@v2
      with:
        name: test
        path: build/reports/**/*
    - name: testReport
      run: ./gradlew jacocoTestReport
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
    - name: sonarcloud
      run: ./gradlew sonarqube
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_SONAR }}
#  analyze:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v1
##    - name: Debug SSH
##      uses: mxschmitt/action-tmate@v3
#    - name: Qodana - Code Inspection
#      uses: JetBrains/qodana-action@v1.0-eap
#      with:
#        project-dir: /
#        results-dir: qodana-results # will be resolved as /github/workspace/myproject/qodana-results
#        report-dir: qodana-report # will be resolved as /github/workspace/myproject/qodana-report
#    - if: always()
#      name: Results-dir
#      uses: actions/upload-artifact@v2
#      with:
#        name: results-dir
#        path: qodana-results
#    - if: always()
#      name: Report-dir
#      uses: actions/upload-artifact@v2
#      with:
#        name: report-dir
#        path: qodana-report
