name: Java CI

on: [push]
# 手動実行：
#  workflow_dispatch:
#    inputs:
#      name:
#        description: 'Name'
#        required: true

jobs:
  test:
    uses: ./.github/workflows/setup/java.yml
    steps:

      # redisのコンテナを立てる？
    # https://docs.github.com/ja/actions/using-containerized-services/creating-redis-service-containers
    # Service containers to run with `container-job`
#    services:
#      redis:
#        image: redis
#        ports:
#          - 6379:6379
#        options: >-
#          --health-cmd "redis-cli ping"
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5

#     - name: Download artifact
#       uses: actions/download-artifact@v2
#       with:
#         name: my-artifact
#         path: /path/to/downloaded/file
    - name: sudo
      run: sudo chmod +x ./gradlew
    - name: Build with Gradle
      env:
        GITHUB: true
      run: ./gradlew test


#     - name: test
#       uses: gradle/gradle-build-action@v2
#       env:
#         GITHUB: true
#       with:
#         arguments: test
#         gradle-version: current
#         build-root-directory: /

    - if: always()
      name: Upload test result
      uses: actions/upload-artifact@v3
      with:
        name: test
        path: kirimaru-backend/build/reports/**/*
    - name: testReport
      run: ./gradlew jacocoTestReport
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
    - name: sonarcloud
      run: ./gradlew sonarqube
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_SONAR }}

#  analyze:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v1
##    - name: Debug SSH
##      uses: mxschmitt/action-tmate@v3
#    - name: Qodana - Code Inspection
#      uses: JetBrains/qodana-action@v1.0-eap
#      with:
#        project-dir: /
#        results-dir: qodana-results # will be resolved as /github/workspace/myproject/qodana-results
#        report-dir: qodana-report # will be resolved as /github/workspace/myproject/qodana-report
#    - if: always()
#      name: Results-dir
#      uses: actions/upload-artifact@v2
#      with:
#        name: results-dir
#        path: qodana-results
#    - if: always()
#      name: Report-dir
#      uses: actions/upload-artifact@v2
#      with:
#        name: report-dir
#        path: qodana-report
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: sudo
        run: sudo chmod +x ./gradlew
      - name: build
        run: ./gradlew build
#         uses: gradle/gradle-build-action@v2
#         env:
#           GITHUB: true
#         with:
#           arguments: build
  lint:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
  launchable:
    needs: test
    uses: ./.github/workflows/setup/launchable.yml
    steps:
      - name: verify
        run: launchable verify
      - name: record build
        run: launchable record build --name ${GITHUB_RUN_ID}
      - name: launchable record tests # おそらく、TESTファイルは共有されていない
        run: launchable record tests gradle build/test-results/test/TEST-*.xml
        if: always()
